<!-- Launch file for running the nodelet for Flame. -->
<launch>
  <arg name="image" default="/camera/image_rect_color" />
  <arg name="keyframes" default="keyframes" />

  <arg name="namespace" default="flame" />
  <arg name="manager" default="manager" />
  <arg name="standalone" default="true" />
  <arg name="output_dest" default="log" />

  <arg name="load_params" default="true" />
  <arg name="param_file" default="flame_nodelet.yaml" />

  <arg name="bag_data" default="false" />

  <group ns="$(arg namespace)" >
	<node pkg="flame_ros" type="timer.sh" name="timer" clear_params="true"/>
    <!-- frames -->
    <include file="$(find flame_ros)/launch/frames.launch" />

    <!-- Launch the nodelet manager. -->
    <node if="$(arg standalone)"
          pkg="nodelet" type="nodelet" name="$(arg manager)"
          args="manager" output="$(arg output_dest)" respawn="true" >
    </node>

    <!-- Launch the nodelet.. -->
    <node pkg="nodelet" type="nodelet" name="flame_nodelet"
          args="load flame_ros/FlameNodelet $(arg manager)"
          output="$(arg output_dest)" respawn="true"  >
      <rosparam command="load" if="$(arg load_params)"
                file="$(find flame_ros)/cfg/$(arg param_file)"/>
      <remap from="image" to="$(arg image)" />
      <remap from="keyframes" to="$(arg keyframes)" />

    </node>

  </group>

  <!-- Bag the outputs. -->
  <node if="$(arg bag_data)"
        pkg="rosbag" type="record" name="flame_bagger"
        output="$(arg output_dest)"
        args="/$(arg namespace)/mesh
              /$(arg namespace)/stats
              /$(arg namespace)/nodelet_stats
              /$(arg namespace)/idepth_registered/camera_info
              /$(arg namespace)/idepth_registered/image_rect
              /$(arg namespace)/depth_registered/camera_info
              /$(arg namespace)/depth_registered/image_rect
              /$(arg namespace)/depth_registered_raw/camera_info
              /$(arg namespace)/depth_registered_raw/image_rect
              /tf
              /tf_static
              -o flame">
  </node>
<node pkg="octomap_server" type="octomap_tracking_server_node" name="octomap_tracking_server_node" output="screen" >
  <remap from="/cloud_in" to="/flame/cloud_throttle" />
  <remap from="/projected_map" to="/map" />
   <param name="frame_id" type="string" value="map" />
   <param name="base_frame_id" type="string" value="imu" />
   <param name="height_map" type="bool" value="false" />
   <param name="resolution" type="double" value="0.1" /> 
   <param name="filter_ground" type="bool" value="true" />
   <param name="sensor_model/max_range" type="double" value="2.0" />
   <!-- <param name="sensor_model/hit" type="double" value="0.8" />
   <param name="sensor_model/miss" type="double" value="0.3" /> -->
   <param name="occupancy_min_z" type="double" value="0.3" />
   <param name="occupancy_max_z" type="double" value="0.7" />
   <!-- <param name="pointcloud_max_z" type="double" value="0.7" />
   <param name="pointcloud_min_z" type="double" value="0.1" /> -->
</node> 

</launch>
